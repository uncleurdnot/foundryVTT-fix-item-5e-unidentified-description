name: Publish Module

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Increment version number
        id: increment_version
        run: |
          VERSION=$(jq -r '.version' module.json)
          NEW_VERSION=$(echo $VERSION | awk -F. -v OFS=. '{$NF++;print}')
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          jq --arg v "$NEW_VERSION" '.version = $v' module.json > tmp.json && mv tmp.json module.json

      - name: Generate module.json
        run: |
          printf '{
            "name": "fix-item-description-bug",
            "title": "Fix Item Description Bug",
            "description": "This module fixes the issue where identified descriptions are shown for unidentified items.",
            "version": "%s",
            "author": "UncleUrdnot",
            "esmodules": ["scripts/fix-item-description.js"],
            "styles": [],
            "packs": [],
            "systems": [],
            "dependencies": [
              {
                "name": "lib-wrapper",
                "type": "module",
                "version": "1.12.14"
              }
            ],
            "url": "https://uncleurdnot.github.io/foundryVTT-fix-item-5e-unidentified-description/",
            "manifest": "https://uncleurdnot.github.io/foundryVTT-fix-item-5e-unidentified-description/module.json",
            "download": "https://github.com/uncleurdnot/foundryVTT-fix-item-5e-unidentified-description/archive/refs/heads/master.zip"
          }' "$NEW_VERSION" > module.json

      - name: Create zip file
        run: |
          zip -r module.zip . -x "*.git*" "*.github*" "module.zip"

      - name: Commit and Push changes
        id: git-check
        run: |
          git diff --exit-code || echo "Changes detected"
        continue-on-error: true

      - name: Push updated module.json
        if: steps.git-check.outputs.changed == 'true'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add module.json
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload module.zip
        uses: actions/upload-artifact@v3
        with:
          name: module
          path: module.zip

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          body: "Release of version ${{ env.NEW_VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: module.zip
          asset_name: module.zip
          asset_content_type: application/zip
